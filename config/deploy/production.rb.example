# Custom - Config - Capistrano:
set :stage, :production
set :branch, 'your_branch'  # usually: stable
set :deploy_to, "/your/deploy/path"

set :rails_env, "production"

# These variables are only usefull if you set an assets_cp server rule
# Otherwiste, don't use them
# set :assets_cp_ssh_port, "22"
# set :assets_cp_ssh_user, "canvas"
# set :assets_source, "server-ip"
# set :assets_source_path, "/path/to/app/public"
# set :assets_folders, ["dist", "optimized"]

# Simple Role Syntax
# ==================
# Supports bulk-adding hosts to roles, the primary
# extended properties on the server.
# server 'example.com', user: 'deploy', roles: %w{web app}, my_property: :my_value

#!! Read this !!
server "server-ip", user: "canvas", roles: %w{web app db assets_sr ubuntu}, primary: true
# About custom roles:
# We added ubuntu/cent_os roles, in case we need to set different variables according to servers' OS
# assets_sr role is always required, this server will be the one where assets are precompiled during deployment process
# assets_cp role is required if you don't use S3 to upload your compiled assets. Assets will be compiled on assets_sr and will be copied to assets_cp servers once compilation is done so that every server have the exact same version of the assets (this is needed for brandable_css editor files)


# Extended Server Syntax
# ======================
# This can be used to drop a more detailed server
# definition into the server list. The second argument
# something that quacks like a hash can be used to set
# extended properties on the server.
# server 'example.com', user: 'deploy', roles: %w{web app}, my_property: :my_value

# you can set custom ssh options
# it's possible to pass any option but you need to keep in mind that net/ssh understand limited list of options
# you can see them in [net/ssh documentation](http://net-ssh.github.io/net-ssh/classes/Net/SSH.html#method-c-start)
# set it globally
# set :ssh_options, {
#   keys: %w(/home/user_name/.ssh/id_rsa),
#   forward_agent: true,
#   auth_methods: %w(publickey)
# }
# and/or per server
# server 'example.com',
#   user: 'user_name',
#   roles: %w{web app},
#   ssh_options: {
#     user: 'user_name', # overrides user setting above
#     keys: %w(/home/user_name/.ssh/id_rsa),
#     forward_agent: false,
#     auth_methods: %w(publickey password)
#     # password: 'please use keys'
#   }
# setting per server overrides global ssh_options

# fetch(:default_env).merge!(rails_env: :production)
